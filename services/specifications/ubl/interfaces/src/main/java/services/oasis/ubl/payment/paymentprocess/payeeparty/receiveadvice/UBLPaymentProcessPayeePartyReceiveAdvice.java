package services.oasis.ubl.payment.paymentprocess.payeeparty.receiveadvice;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import br.ufsc.gsigma.infrastructure.ws.access.ServiceAccessContract;

/**
 * This class was generated by Apache CXF 2.2.9
 * Sat Oct 30 17:33:58 BRST 2010
 * Generated source version: 2.2.9
 * 
 */
 
@WebService(targetNamespace = "http://ubl.oasis.services/payment/paymentprocess/payeeParty/receiveAdvice", name = "UBL_PaymentProcess_PayeeParty_ReceiveAdvice")
@XmlSeeAlso({ObjectFactory.class, oasis.names.specification.ubl.schema.xsd.remittanceadvice_2.ObjectFactory.class, oasis.names.specification.ubl.schema.xsd.commonextensioncomponents_2.ObjectFactory.class, br.ufsc.gsigma.processcontext.ObjectFactory.class, un.unece.uncefact.codelist.specification._54217._2001.ObjectFactory.class, oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.ObjectFactory.class, un.unece.uncefact.data.specification.unqualifieddatatypesschemamodule._2.ObjectFactory.class, oasis.names.specification.ubl.schema.xsd.qualifieddatatypes_2.ObjectFactory.class, oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2.ObjectFactory.class})
public interface UBLPaymentProcessPayeePartyReceiveAdvice extends ServiceAccessContract {

    @Oneway
    @RequestWrapper(localName = "receiveAdviceAsync", targetNamespace = "http://ubl.oasis.services/payment/paymentprocess/payeeParty/receiveAdvice", className = "services.oasis.ubl.payment.paymentprocess.payeeparty.receiveadvice.ReceiveAdviceAsync")
    @WebMethod(action = "http://ubl.oasis.services/payment/paymentprocess/accountingCustomer/receiveAdvice/receiveAdviceAsync")
    public void receiveAdviceAsync(
        @WebParam(name = "processContext", targetNamespace = "")
        br.ufsc.gsigma.processcontext.ProcessContext processContext,
        @WebParam(name = "inputFromAccountingCustomer", targetNamespace = "")
        oasis.names.specification.ubl.schema.xsd.remittanceadvice_2.RemittanceAdviceType inputFromAccountingCustomer,
        @WebParam(name = "inputFromAccountingSupplier", targetNamespace = "")
        oasis.names.specification.ubl.schema.xsd.remittanceadvice_2.RemittanceAdviceType inputFromAccountingSupplier
    );

    @RequestWrapper(localName = "receiveAdvice", targetNamespace = "http://ubl.oasis.services/payment/paymentprocess/payeeParty/receiveAdvice", className = "services.oasis.ubl.payment.paymentprocess.payeeparty.receiveadvice.ReceiveAdvice")
    @WebMethod(action = "http://ubl.oasis.services/payment/paymentprocess/payeeParty/receiveAdvice/receiveAdvice")
    @ResponseWrapper(localName = "receiveAdviceResponse", targetNamespace = "http://ubl.oasis.services/payment/paymentprocess/payeeParty/receiveAdvice", className = "services.oasis.ubl.payment.paymentprocess.payeeparty.receiveadvice.ReceiveAdviceResponse")
    public void receiveAdvice(
        @WebParam(name = "inputFromAccountingCustomer", targetNamespace = "")
        oasis.names.specification.ubl.schema.xsd.remittanceadvice_2.RemittanceAdviceType inputFromAccountingCustomer,
        @WebParam(name = "inputFromAccountingSupplier", targetNamespace = "")
        oasis.names.specification.ubl.schema.xsd.remittanceadvice_2.RemittanceAdviceType inputFromAccountingSupplier
    );

    @WebResult(name = "output", targetNamespace = "")
    @RequestWrapper(localName = "alive", targetNamespace = "http://ubl.oasis.services/payment/paymentprocess/payeeParty/receiveAdvice", className = "services.oasis.ubl.payment.paymentprocess.payeeparty.receiveadvice.Alive")
    @WebMethod(action = "http://ubl.oasis.services/payment/paymentprocess/payeeParty/receiveAdvice/alive")
    @ResponseWrapper(localName = "aliveResponse", targetNamespace = "http://ubl.oasis.services/payment/paymentprocess/payeeParty/receiveAdvice", className = "services.oasis.ubl.payment.paymentprocess.payeeparty.receiveadvice.AliveResponse")
    public java.lang.Boolean alive();
}
